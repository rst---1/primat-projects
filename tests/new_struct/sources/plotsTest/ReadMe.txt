	Ftau_xx, FAtau_xx, Ftau_yy, FAtau_yy,
	Ftau_xy, FAtau_xy, Ftau_zz, FAtau_zz,
FU_x_grad, FAU_x_grad, FU_y_grad, FAU_y_grad,

				↓	↓	↓	

			-----------------
			|	скрипты		|
			-----------------

				↓	↓	↓	

			рисунки в /png/..,
			рисунки в /errors/..






На вход подаются файлы с данными полученными с помощью расчёта и с помощью 
аналитической формулы. Скрипты обрабатывают их. Выводят срезы в виде рисунков 
при разных координатах в папке /png/. Также выводятся разница между аналитическими данными и 
численными в папку /errors/.








1 - закинуть файлы данных (в формате *.gpl) в папку
2 - вызвать 1.py для конвертирования
3 - включить ParaView. Вызвать скрипты из ParaView (1_pvpython_*.py, ...) в меню Tools -> Python Shell -> Run Script
4 - вызов 1_.sh
5 - вызов 1__.sh


Дерево:
plots
|--Sections
|	|--backup
|	|
|	|--errors
|	|	|
|	|	|
|	|	`
|	|
|	`--png
|
|--1.py
|--1_.sh
|--1__.sh
|--converter_gpl_to_csv.py
|--deleter_of_strings.py
|--errors_in_one_file.py
`--ReadMe.txt





plots		-	содержит скрипты и данные в формате *.gpl
Sections	-	содержит скрипты и промежуточные файлы
backup		-	для резерва данных
errors		-	содержит рисунки ошибок
png			-	содержит рисунки функций



1.py - конвертирует файлы *.gpl в *.csv. Удаляет всё в папке Sections

1_.sh - вызывает поочерёдно скрипты 2, 3, 4, 5

1__.sh - вызывает поочерёдно скрипты 7, 8, 9, 10






0SETTINGS.txt - содержит настройки для кода. INPUT SETTINGS.

0.py - файл настроек

1_pvpython_1_TEST.py - строит поверхность FTau_zx для первого файла. Сохраняет сечения.
1_pvpython_3_TEST.py - строит поверхность FTau_zy для первого файла. Сохраняет сечения.
1_pvpython_5_TEST.py - строит поверхность FTau_zx для второго файла. Вырезает отверстия. Сохраняет сечения.
1_pvpython_7_TEST.py - строит поверхность FTau_zy для второго файла. Вырезает отверстия. Сохраняет сечения.

2.py - Конвертирует "*.csv" в "*.gpl". Просматривает каждый файл в папке. Первый цикл(39-56) удаляет первую строку 
	файлов *tau_z*. Второй цикл(58-76) заменяет ',' на '\t' файлов *tau_z*. Третий цикл
	(79-86) заменяет расширение *.csv на *.gpl.

3.sh - Первый цикл(10-35) читает координаты срезов, название имён файлов. Циклы(44-78) 
	формируют массивы A_Tau_z* и D_Tau_z* с именами новых файлов. Циклы(96-122 вызывают) 
	скрипт 3_.sh с параметрами для файлов *tau_z*

3_.sh - создаются графики с помощью GNUPLOT в зависимости от третьего параметра.

4_tau_zx_x.py - Цикл(8-19) читает названия части имени файла из настроек. Цикл(27-121) 
	открывают файлы *tau_z*(*).gpl и считывая по строчке переводят строку в число. 
	Далее(68-105) вычисляют значения x, y, значения функций, ошибки. Запись в файл 
	вывода fdOut.
4_tau_zx_y.py - --//--//--
4_tau_zy_x.py - --//--//--
4_tau_zy_y.py - --//--//--

5.sh -  Первый цикл(10-32) читает координаты срезов, название части имён файлов. 
	Циклы(39-69) формируют массивы A_Tau_z* с именами новых файлов. 
	Циклы(85-115 вызывают) скрипт 5_.py и 5__.sh с массивами A_Tau_z*.
5_.py - 
5__.sh -  Создаются графики с помощью GNUPLOT в зависимости от третьего параметра.

6_pvpython.py - строит поверхность FU_z для первого и второго файла. Сохраняет сечения.
6_pvpython_1.py - строит поверхность FU_z для первого файла.
6_pvpython_1_TEST.py - строит поверхность FU_z для первого файла. Сохраняет сечения.
6_pvpython_2.py - Сохраняет сечения для первого файла.
6_pvpython_3.py - строит поверхность FU_z для второго файла. Делает отверстия.
6_pvpython_3_TEST.py - строит поверхность FU_z для второго файла. Сохраняет сечения.
6_pvpython_4.py - Сохраняет сечения для второго файла.

7.py - просматривает каждый файл в папке. Первый цикл(38-53) удаляет первую строку 
	файлов *U_z*. Второй цикл(56-74) заменяет ',' на '\t' файлов *U_z*. Третий цикл
	(77-83) заменяет расширение *.csv на *.gpl.

8.sh - Первый цикл(10-35) читает координаты срезов, название имён файлов. Циклы(43-59) 
	формируют массивы A_U_z* и D_U_z* с именами новых файлов. Циклы(73-85 вызывают) 
	скрипт 8_.sh с параметрами для файлов *U_z*
8_.sh - создаются графики с помощью GNUPLOT в зависимости от третьего параметра.

9_U_z_x.py -  Цикл(8-19) читает названия части имени файла из настроек. Цикл(27-121) 
	открывают файлы *U_z*(*).gpl и считывая по строчке переводят строку в число. 
	Далее(68-105) вычисляют значения x, y, значения функций, ошибки. Запись в файл 
	вывода fdOut.
9_U_z_y.py --//--//--

10.sh - Первый цикл(10-32) читает координаты срезов, название части имён файлов. 
	Циклы(39-52) формируют массивы A_U_z* с именами новых файлов. 
	Циклы(65-82 вызывают) скрипт 10_.py и 10__.sh с массивами A_U_z*.
10_.py -
10__.sh - Создаются графики с помощью GNUPLOT в зависимости от третьего параметра.









